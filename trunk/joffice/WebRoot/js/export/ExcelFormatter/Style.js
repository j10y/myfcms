Ext.ux.Exporter.ExcelFormatter.Style=Ext.extend(Object,{constructor:function(a){a=a||{};Ext.apply(this,a,{parentStyle:"",attributes:[]});Ext.ux.Exporter.ExcelFormatter.Style.superclass.constructor.apply(this,arguments);if(this.id==undefined){throw new Error("An ID must be provided to Style");}this.preparePropertyStrings();},preparePropertyStrings:function(){Ext.each(this.attributes,function(a,b){this.attributes[b].propertiesString=this.buildPropertyString(a);this.attributes[b].children=a.children||[];Ext.each(a.children,function(d,c){this.attributes[b].children[c].propertiesString=this.buildPropertyString(d);},this);},this);},buildPropertyString:function(b){var a="";Ext.each(b.properties||[],function(c){a+=String.format('ss:{0}="{1}" ',c.name,c.value);},this);return a;},render:function(){return this.tpl.apply(this);},tpl:new Ext.XTemplate('<tpl if="parentStyle.length == 0">','<ss:Style ss:ID="{id}">',"</tpl>",'<tpl if="parentStyle.length != 0">','<ss:Style ss:ID="{id}" ss:Parent="{parentStyle}">',"</tpl>",'<tpl for="attributes">','<tpl if="children.length == 0">',"<ss:{name} {propertiesString} />","</tpl>",'<tpl if="children.length > 0">',"<ss:{name} {propertiesString}>",'<tpl for="children">',"<ss:{name} {propertiesString} />","</tpl>","</ss:{name}>","</tpl>","</tpl>","</ss:Style>")});