Ext.ux.Exporter.ExcelFormatter.Worksheet=Ext.extend(Object,{constructor:function(a,b){b=b||{};this.store=a;Ext.applyIf(b,{hasTitle:true,hasHeadings:true,stripeRows:true,title:"Workbook",columns:a.fields==undefined?{}:a.fields.items});Ext.apply(this,b);Ext.ux.Exporter.ExcelFormatter.Worksheet.superclass.constructor.apply(this,arguments);},dateFormatString:"Y-m-d",worksheetTpl:new Ext.XTemplate('<ss:Worksheet ss:Name="{title}">',"<ss:Names>",'<ss:NamedRange ss:Name="Print_Titles" ss:RefersTo="=\'{title}\'!R1:R2" />',"</ss:Names>",'<ss:Table x:FullRows="1" x:FullColumns="1" ss:ExpandedColumnCount="{colCount}" ss:ExpandedRowCount="{rowCount}">',"{columns}",'<ss:Row ss:Height="38">','<ss:Cell ss:StyleID="title" ss:MergeAcross="{colCount - 1}">','<ss:Data xmlns:html="http://www.w3.org/TR/REC-html40" ss:Type="String">','<html:B><html:U><html:Font html:Size="15">{title}','</html:Font></html:U></html:B></ss:Data><ss:NamedCell ss:Name="Print_Titles" />',"</ss:Cell>","</ss:Row>",'<ss:Row ss:AutoFitHeight="1">',"{header}","</ss:Row>","{rows}","</ss:Table>","<x:WorksheetOptions>","<x:PageSetup>",'<x:Layout x:CenterHorizontal="1" x:Orientation="Landscape" />','<x:Footer x:Data="Page &amp;P of &amp;N" x:Margin="0.5" />','<x:PageMargins x:Top="0.5" x:Right="0.5" x:Left="0.5" x:Bottom="0.8" />',"</x:PageSetup>","<x:FitToPage />","<x:Print>","<x:PrintErrors>Blank</x:PrintErrors>","<x:FitWidth>1</x:FitWidth>","<x:FitHeight>32767</x:FitHeight>","<x:ValidPrinterInfo />","<x:VerticalResolution>600</x:VerticalResolution>","</x:Print>","<x:Selected />","<x:DoNotDisplayGridlines />","<x:ProtectObjects>False</x:ProtectObjects>","<x:ProtectScenarios>False</x:ProtectScenarios>","</x:WorksheetOptions>","</ss:Worksheet>"),render:function(a){return this.worksheetTpl.apply({header:this.buildHeader(),columns:this.buildColumns().join(""),rows:this.buildRows().join(""),colCount:this.columns.length,rowCount:this.store.getCount()+2,title:this.title});},buildColumns:function(){var a=[];Ext.each(this.columns,function(b){a.push(this.buildColumn());},this);return a;},buildColumn:function(a){return String.format('<ss:Column ss:AutoFitWidth="1" ss:Width="{0}" />',a||164);},buildRows:function(){var a=[];this.store.each(function(b,c){a.push(this.buildRow(b,c));},this);return a;},buildHeader:function(){var a=[];Ext.each(this.columns,function(b){var c;if(b.header!=undefined){c=b.header;}else{c=b.name.replace(/_/g," ");c=c.charAt(0).toUpperCase()+c.substr(1).toLowerCase();}a.push(String.format('<ss:Cell ss:StyleID="headercell"><ss:Data ss:Type="String">{0}</ss:Data><ss:NamedCell ss:Name="Print_Titles" /></ss:Cell>',c));},this);return a.join("");},buildRow:function(a,c){var d,b=[];if(this.stripeRows===true){d=c%2==0?"even":"odd";}Ext.each(this.columns,function(f){var e=f.name||f.dataIndex;if(Ext.isFunction(f.renderer)){var h=f.renderer(a.get(e),null,a),g="String";}else{var h=a.get(e),g=this.typeMappings[f.type||a.fields.item(e).type];}b.push(this.buildCell(h,g,d).render());},this);return String.format("<ss:Row>{0}</ss:Row>",b.join(""));},buildCell:function(c,b,a){if(b=="DateTime"&&Ext.isFunction(c.format)){c=c.format(this.dateFormatString);}return new Ext.ux.Exporter.ExcelFormatter.Cell({value:c,type:b,style:a});},typeMappings:{"int":"Number","string":"String","float":"Number","date":"DateTime"}});